@page "/"
@using System.Net.Http
@using BlazorSignalRApp.Shared.Rooms
@inject HttpClient Http

<div style="flex:1;">
    <div class="container">
        <div class="row">
            <div class="col-md-3" />
            <div class="col px-auto mt-5">
                @if (rooms != null)
                {
                    <div class="list-group text-white text-center"
                    style="max-height: 80vh; margin-bottom: 10px; overflow-y: auto; -webkit-overflow-scrolling: touch;">
                        <div class="list-group-item border-light" style="background-color:inherit;">
                            <h5>
                                <a class="text-light" href="/new">
                                    Open new room
                                </a>
                            </h5>
                        </div>
                        @foreach (var room in rooms)
                        {
                            <div class="list-group-item border-0" style="background-color:inherit;">
                                <h5 style="cursor:pointer" @onclick="() => focusedRoom = focusedRoom == room ? null : room">
                                    @room.Id</h5>
                                @if (room == focusedRoom)
                                {
                                    <div class="container">
                                        <div class="col-md-12">
                                            <div class="btn-group row" role="group" aria-label="button group">
                                                <a href="/@room.Id/-1" class="btn btn-outline-light">Watch</a>
                                                @foreach (var (name, index) in room.Players.Select((p, i) => (p.Name, i)))
                                                {
                                                    <a href="/@room.Id/@index" class="btn btn-outline-light">@name</a>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                    </div>
                }
                else
                {
                    <div class="mt-5 alert text-light border-light" role="alert">Loading rooms...</div>
                }
            </div>
            <div class="col-md-3" />
        </div>
    </div>
</div>

@code {
    private GameRoomData newRoom = new GameRoomData();
    private GameRoomData[] rooms;
    private GameRoomData focusedRoom = null;

    protected override Task OnInitializedAsync() => ReloadRoomsAsync();

    private async Task ReloadRoomsAsync() => rooms = await Http.GetFromJsonAsync<GameRoomData[]>("gamerooms");

}